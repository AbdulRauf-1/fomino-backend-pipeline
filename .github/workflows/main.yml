name: CI/CD Workflow

on:
  push:
    branches:
      - testing
      - main
      
jobs:
 
  deploy_main:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v2

      - name: Evaluate DEPLOY_FLAG
        id: check-flag
        run: |
          DEPLOY_FLAG="yes"
          if [ "$DEPLOY_FLAG" != "yes" ]; then
            echo "Deployment flag is not set to 'yes'."
            exit 78
          fi

      - name: Create .env file dynamically
        run: |
          echo "Creating .env file..."
          echo "${{ secrets.ENV_FILE_CONTENT_PROD }}" > .env

      - name: Create config folder and files
        run: |
          echo "Creating config folder..."
          mkdir -p config
          echo "${{ secrets.CONFIG_JSON_CONTENT }}" > config/config.json

      - name: Create .htaccess file
        run: |
          echo "Creating .htaccess_prod file..."
          echo "${{ secrets.HTACCESS_CONTENT_PROD }}" > .htaccess

      - name: Creating btwixtServiceAccount.json file
        run: |
          echo "Creating btwixtServiceAccount.json..."
          echo "${{ secrets.btwixtServiceAccount_CONTENT_PROD }}" > btwixtServiceAccount.json

      - name: Creating serviceAccount.js file
        run: |
          echo "Creating serviceAccount.js..."
          echo "${{ secrets.serviceAccount_CONTENT_PROD_JS }}" > serviceAccount.js

      - name: Creating serviceAccount.json file
        run: |
          echo "Creating serviceAccount.json..."
          echo "${{ secrets.serviceAccount_CONTENT_PROD_JSON }}" > serviceAccount.json

      - name: Creating trimServiceAcount.json file
        run: |
          echo "Creating trimServiceAcount.json..."
          echo "${{ secrets.trimServiceAcount_CONTENT_PROD }}" > trimServiceAcount.json


      - name: ðŸ“‚ Sync files to production
        uses: SamKirkland/FTP-Deploy-Action@v4.2.0
        with:
          server: ftp.fomino.ch
          username: ${{ secrets.BACKEND_FTP_USERNAME }}
          password: ${{ secrets.BACKEND_FTP_PASSWORD }}
          debug: true
        
      - name: Trigger npm install on server
        run: |
              echo "Triggering npm install via PHP script..."
              curl -v -X GET "https://testingtsh.fomino.ch/trigger.php"
        

  deploy_testing:
    if: github.ref == 'refs/heads/testing'
    runs-on: ubuntu-latest

    steps:
      
      - name: ðŸšš Get latest code
        uses: actions/checkout@v2
      - name: Create .env file dynamically
        run: |
          echo "Creating .env file..."
          echo "${{ secrets.ENV_FILE_CONTENT_PROD }}" > .env

      - name: Create config folder and files
        run: |
          echo "Creating config folder..."
          mkdir -p config
          echo "${{ secrets.CONFIG_JSON_CONTENT }}" > config/config.json

      - name: Create .htaccess file
        run: |
          echo "Creating .htaccess_prod file..."
          echo "${{ secrets.HTACCESS_CONTENT_PROD }}" > .htaccess

      - name: Creating btwixtServiceAccount.json file
        run: |
          echo "Creating btwixtServiceAccount.json..."
          echo "${{ secrets.btwixtServiceAccount_CONTENT_PROD }}" > btwixtServiceAccount.json

      - name: Creating serviceAccount.js file
        run: |
          echo "Creating serviceAccount.js..."
          echo "${{ secrets.serviceAccount_CONTENT_PROD_JS }}" > serviceAccount.js

      - name: Creating serviceAccount.json file
        run: |
          echo "Creating serviceAccount.json..."
          echo "${{ secrets.serviceAccount_CONTENT_PROD_JSON }}" > serviceAccount.json

      - name: Creating trimServiceAcount.json file
        run: |
          echo "Creating trimServiceAcount.json..."
          echo "${{ secrets.trimServiceAcount_CONTENT_PROD }}" > trimServiceAcount.json


      - name: ðŸ“‚ Sync files to production
        uses: SamKirkland/FTP-Deploy-Action@v4.2.0
        with:
          server: ftp.fomino.ch
          username: ${{ secrets.BACKEND_FTP_USERNAME }}
          password: ${{ secrets.BACKEND_FTP_PASSWORD }}
          debug: true
        
      - name: Trigger npm install on server
        run: |
              echo "Triggering npm install via PHP script..."
              curl -v -X GET "https://testingtsh.fomino.ch/trigger.php"
        